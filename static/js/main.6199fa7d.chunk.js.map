{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSort","visibleGoods","goods","console","log","sort","firstGood","secondGood","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isOriginal","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAA4BF,mBAASH,EAASM,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAhCD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOC,GAoBzB,OAjBAC,QAAQC,IAAIL,EAAUH,GAEtBK,EAAaI,MAAK,SAACC,EAAWC,GAC5B,OAAQR,GACN,KAAKP,EAASgB,QACZ,OAAOF,EAAUG,cAAcF,GACjC,KAAKf,EAASkB,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OACvC,QACE,OAAO,MAITf,GACFK,EAAaW,UAGRX,EAQcY,CACnBpB,EAAiB,CAAEG,aAAYG,aAW3Be,EAAsBlB,GAAcG,IAAaP,EAASM,KAEhE,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAW,SACT,UACA,CAAE,WAAYlB,IAAaP,EAASgB,UAExCU,QApBe,kBAAMlB,EAAQR,EAASgB,UAaxC,iCAYA,wBACEQ,KAAK,SACLD,UACEE,IAAW,SACT,aACA,CAAE,WAAYlB,IAAaP,EAASkB,SAExCQ,QA/Ba,kBAAMlB,EAAQR,EAASkB,SAwBtC,4BAYA,wBACEM,KAAK,SACLD,UACEE,IAAW,SACT,aACA,CAAE,YAAarB,IAEnBsB,QA1CQ,kBAAMrB,GAAYD,IAmC5B,qBAYCkB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAlDa,WACrBrB,GAAW,GACXG,EAAQR,EAASM,OA6CX,sBAUJ,6BACGG,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC5HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6199fa7d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return firstGood.localeCompare(secondGood);\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n\n  const [sortType, setSort] = useState(SortType.NONE);\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer, { isReversed, sortType },\n  );\n\n  const sortByAlphabet = () => setSort(SortType.ALPABET);\n  const sortByLength = () => setSort(SortType.LENGTH);\n  const reverse = () => setReverse(!isReversed);\n  const resetToDefault = () => {\n    setReverse(false);\n    setSort(SortType.NONE);\n  };\n\n  const isOriginal: boolean = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames('button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPABET })\n          }\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH })\n          }\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button',\n              'is-warning',\n              { 'is-light': !isReversed })\n          }\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isOriginal && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetToDefault}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}